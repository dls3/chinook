Find the albums recorded by the artist Queen.

Artist.find_by(name: 'Queen').id
Album.where(artist_id: 51)

or

Album.where(artist_id: Artist.find_by(name: 'Queen').id)


Count how many tracks belong to the media type "Protected MPEG-4 video file".

MediaType.find_by(name: 'Protected MPEG-4 video file').id
Track.count(media_type_id: 3)

or

Track.count(MediaType.find_by(name: 'Protected MPEG-4 video file').id)

Find the genre with the name "Hip Hop/Rap".

Genre.find_by(name: 'Hip Hop/Rap').id

Count how many tracks belong to the "Hip Hop/Rap" genre

Genre.find_by(name: 'Hip Hop/Rap').id
Track.where(genre_id: 17).count

Find the total amount of time required to listen to all the tracks in the database.

Track.sum(:milliseconds)

Find the highest price of any track that has the media type "MPEG audio file".

MediaType.find_by(name: 'MPEG audio file').id
Track.where(media_type_id: 1).maximum(:unit_price)

Find the name of the most expensive track that has the media type "MPEG audio file".

Track.where(media_type_id: 1).order(unit_price: :desc).first.name

Find the 2 oldest artists.

Artist.order(created_at: :asc).limit(2)

Find the least expensive track that has the genre "Electronica/Dance".

Genre.find_by(name: 'Electronica/Dance').id
Track.where(genre_id: 15).minimum(:unit_price)

Find all "MPEG autio file" tracks in the genre "Electronica/Dance".

Track.where("media_type_id = ? AND genre_id = ?", MediaType.find_by(name: 'MPEG audio file'), Genre.find_by(name: 'Electronica/Dance'))
